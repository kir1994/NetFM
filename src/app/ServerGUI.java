/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.PrintStream;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.text.DefaultCaret;
import net.CallbackHandler;
import server.Server;
import server.TextAreaOutputStream;

/**
 *
 * @author Ivanov
 */
public class ServerGUI extends javax.swing.JFrame {

    
    public static void validateInt(final JTextField txt){
            txt.addKeyListener(new KeyAdapter() {

                   @Override
                   public void keyTyped(KeyEvent e) {
                        char c = e.getKeyChar();
                        if ((c < '0') || (c > '9')) {
                            e.consume();  // ignore event
                   }
               }
            });
        }
    /**
     * Creates new form ServerGUI
     */
    public ServerGUI() {
        initComponents();
        model = new DefaultListModel();
        clList.setModel(model); 
        f = false;
        srv = new Server(new CallbackHandler() {
             @Override
             public void handle(String state, String session) {
                if (state.equalsIgnoreCase("Connected")) {
                    clList.setEnabled(true);
                    model.addElement(session);            
                } else {
                    model.removeElement(session);
                    if (model.capacity() == 0) {
                        clList.setEnabled(false);
                    }
                }
            }
        });       
        Runtime.getRuntime().addShutdownHook(new Thread() {
            @Override
            public void run(){
                srv.stop();
            }
        });
           
        validateInt(portField);
        DefaultCaret caret = (DefaultCaret)textArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        System.setErr(System.out);
        System.setOut(new PrintStream(new TextAreaOutputStream((textArea))));
        clList.setEnabled(false);
        textArea.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        portField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        clList = new javax.swing.JList();
        discBtn = new javax.swing.JButton();
        startBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FB Server");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Port:");

        portField.setText("123");

        clList.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        clList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        clList.setToolTipText("");
        jScrollPane2.setViewportView(clList);

        discBtn.setText("Disconnect");
        discBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discBtnActionPerformed(evt);
            }
        });

        startBtn.setText("Start");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        textArea.setRows(5);
        textArea.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(discBtn)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(startBtn))
                    .addComponent(discBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        if(startBtn.getText().equals("Start")){
            if(!f){
                try{
                    textArea.setText("");
                    int a = Integer.parseInt(portField.getText());                    
                    if(!srv.start(a))
                        JOptionPane.showMessageDialog(null, "Server start fail");
                    else
                    {                        
                        changeFormState(true);
                        startBtn.setText("Stop");                        
                        f = true;
                    }
                } catch(NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Empty port");
                    f = false;
                }
            }
        } else{
            if(f) {
                srv.stop();  
                changeFormState(false);
                startBtn.setText("Start");
                f = false;
            }
        }
    }//GEN-LAST:event_startBtnActionPerformed

    private void discBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discBtnActionPerformed
        try{
            String str = clList.getSelectedValue().toString();
            if(str != null)
                srv.stopSession(str);
        } catch(NullPointerException e) {}
        // TODO add your handling code here:
    }//GEN-LAST:event_discBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        srv.stop();// TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing
       
    private void changeFormState(boolean f){
        textArea.setEnabled(f);
        portField.setEnabled(!f);
        clList.setEnabled(f);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if(info.getName().equals(""))
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }*/
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ServerGUI().setVisible(true);
            }
        });
    }
    
    
    private final DefaultListModel model;
    private final Server srv;
    private boolean f;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList clList;
    private javax.swing.JButton discBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField portField;
    private javax.swing.JButton startBtn;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
